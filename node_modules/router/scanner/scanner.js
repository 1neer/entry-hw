'use strict';
function Scanner() {
}

Scanner.prototype.startScan = function(router, extension, config) {
	var logger = require('logger').get();
	logger.i('scanning...');

	var type = config.hardware.type;

	var scanner = require('./serial');
	this.scanner = scanner;
	scanner.startScan(extension, config, function(error, connector) {
		if(error) {
			logger.e(error);
		} else {
			router.connect(connector, config);
		}
	});
    // 블루투스 로직
    // if(type == 'serial') {
    // this.scanner.type = type;
	// } else if(type == 'bluetooth') {
    //     var scanner = require('./bluetooth');
	// 	this.scanner = scanner;
    //     this.scanner.type = type;
	// 	scanner.startScan(extension, config, function(error, connector) {
	// 		if(error) {
	// 			logger.e(error);
	// 		} else {
	// 			router.connect(connector, config);
	// 		}
	// 	});
    // }
};

Scanner.prototype.stopScan = function() {
	if(this.scanner) {
		this.scanner.stopScan();
		this.scanner = undefined;
	}
};

module.exports = new Scanner();
